$("#create_search").children().click(function(e){
 $(this).addClass("active btn-info");
 $(this).siblings().removeClass('active btn-info').addClass('btn-default');
});

$(".dropdown-menu li a").click(function(){
  $(this).parents(".btn-group").find('.selection').text($(this).text());
  $(this).parents(".btn-group").find('.selection').val($(this).text());
  $(this).parents(".btn-group").find('.hidden-input').val($(this).text());
});

$(function () {
    $('#startDatePicker').datetimepicker({
      minDate: "<%= Date.today %>",
      defaultDate: "<%= Date.today.strftime('%m/%d/%Y') %>",
      pickTime: false
    });

    function getCustomDates() {
      start = moment($('#startDatePicker').val());
      end = moment($('#endDatePicker').val());
      //console.log(start.format("ddd, M, D") + " - " + end.format("ddd, M, D"));
      return start.format("ddd M/D") + " - " + end.format("ddd M/D")
    }

    $('#endDatePicker').datetimepicker({
      defaultDate: "<%= (Date.today + 7).strftime('%m/%d/%Y') %>",
      pickTime: false
    });

    $("#startDatePicker").on("dp.change",function (e) {
       $('#endDatePicker').data("DateTimePicker").setMinDate(e.date);
       $('#daterange-selection').removeAttr('value');
       $('#daterange-selection-phrase').text(getCustomDates);
    });

  $("#endDatePicker").on("dp.change",function (e) {
       $('#startDatePicker').data("DateTimePicker").setMaxDate(e.date);
       $('#daterange-selection').removeAttr('value');
       $('#daterange-selection-phrase').text(getCustomDates);
    });

    $('.keep_open').click(function(event){
      event.stopPropagation();
    });
});

function trending(lat, lng, city, state)
{
  $('#location').val(city + ", " + state);
  $('#selection').text(city + ", " + state);
  $('#lat').val(lat);
  $('#lng').val(lng);
  console.log("city, state: " + city + ", " + state);
  console.log("lat, lng: " + lat + ", " + lng);

  $('#search-terms').show();

  $.ajax({
    type: "POST",
    url: "<%=trending_path%>",
    data: {location: [lat,lng]},
    success: function(html) {
      $('#trending').html(html);
      trending_load();
    },
    error: function(e) {
      console.log("error: " + e);
    }
  });

} // end function trending

function trending_default()
{
  if (($.cookie("city")) && ($.cookie("state")))
  {
    $('#location').val($.cookie("city") + ", " + $.cookie("state"));
    $('#selection').text($.cookie("city") + ", " + $.cookie("state"));
  }
  else
  {
    $('#location').text('Denver, CO');
    $('#selection').text('Denver, CO');
  }
  $('#search-terms').show();

  $.ajax({
    type: "POST",
    url: "<%=trending_path%>",
    data: {},
    success: function(html) {
      $('#trending').html(html);
      trending_load();
  }});
}

$(function () {
  var getTrending = null;

  // Get browser location and set selectors
  var getLocation = function() {
    if ( ($.cookie("lat")) && ($.cookie("lng")) && ($.cookie("city")) && ($.cookie("state")))
    {
      trending($.cookie("lat"), $.cookie("lng"), $.cookie("city"), $.cookie("state"));
    }
    else if ("geolocation" in navigator) //navigator.geolocation)
    {
      getTrending = setTimeout(trending_default, 3000);
      navigator.geolocation.getCurrentPosition(getCity, getCityError, {maximumAge:60000, timeout:5000, enableHighAccuracy:true});
    }
    else
    {
      console.log('else');
      trending_default();
    }
  }

  var getCity = function(position) {
    clearTimeout(getTrending);

    var geocoder = new google.maps.Geocoder();

    var latlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
    console.log(latlng);

    var city = 'Pittsburgh';
    var state = 'PA';

    geocoder.geocode({'latLng': latlng}, function(results, status){
      $.each(results[0].address_components, function (i, address_component) {
          console.log('address_component:'+i);

          var type = address_component.types[0];
          console.log(i+": "+type+":"+address_component.short_name);

          if (type == 'locality')
            city = address_component.short_name;
          else if (type == 'administrative_area_level_1')
            state = address_component.short_name;
      });

      $.cookie("lat", position.coords.latitude, {expires: 365, path: '/'})
      $.cookie("lng", position.coords.longitude, {expires: 365, path: '/'})
      $.cookie("city", city, {expires: 365, path: '/'})
      $.cookie("state", state, {expires: 365, path: '/'})

      trending(position.coords.latitude,position.coords.longitude,city,state);
    });

  }

  var getCityError = function(error) {
    clearTimeout(getTrending);
    trending_default();

    switch(error.code) {
      case error.PERMISSION_DENIED:
          console.log("User denied the request for Geolocation.");
          break;
      case error.POSITION_UNAVAILABLE:
          console.log("Location information is unavailable.");
          break;
      case error.TIMEOUT:
          console.log("The request to get user ocation timed out.");
          break;
      case error.UNKNOWN_ERROR:
          console.log("An unknown error occurred.");
          break;
    } 
  };

  getLocation();
});

$(document).ready(function() {
    $('#selection').click(function () {
        $('#location').css('display', 'inline');
        $('#location').val('');
        $('#location').focus();

        $(this).hide();
    });

    $('#selection-mobile').click(function () {
        $('#location-mobile').css('display', 'inline');
        $('#location-mobile').val('');
        $('#location-mobile').focus();

        $(this).hide();
    });

    $('#location').change(function() {
    });

    $('#location').focusout(function() {
        if( !$(this).val()) {
          var geocoder = new google.maps.Geocoder();

          geocoder.geocode({'address': $('#selection').text()}, function(results, status){
                console.log('results[0].geometry.location:'+results[0].geometry.location);
                $('#lat').val(results[0].geometry.location.lat());
                $('#lng').val(results[0].geometry.location.lng());
          });

          $('#selection').show();
          $(this).val($('#selection').text());
          $(this).css('display', 'none');

        }
    });

    $('#location-mobile').focusout(function() {
        if( !$(this).val()) {
            var geocoder = new google.maps.Geocoder();

            geocoder.geocode({'address': $('#selection-mobile').text()}, function(results, status){
                console.log('results[0].geometry.location:'+results[0].geometry.location);
                $('#lat-mobile').val(results[0].geometry.location.lat());
                $('#lng-mobile').val(results[0].geometry.location.lng());
            });

            $('#selection-mobile').show();
            $(this).val($('#selection-mobile').text());
            $(this).css('display-mobile', 'none');

        }
    });
});

/*
var minmargintop = -85
$(document).ready(function() {
  var height = $(window).height() - 650; 
  $("#home").height(height);

  var margintop = (height - 330);
  $("#search-group").css('margin-top', (margintop >= minmargintop)?((margintop <= 10)?margintop:10):minmargintop)
});

window.onresize = function() {
 var height = $(window).height() - 550; 
  $("#home").height(height);
  var margintop = (height - 330);
  $("#search-group").css('margin-top', (margintop >= minmargintop)?((margintop <= 10)?margintop:10):minmargintop)
} */

var bsubmit = false;

function confirmSearch()
{
    if (bsubmit)
    {
        return true;
    }

    // Get the lat long of the city, state
    console.log("location: " + $('#location').val());
    var geocoder = new google.maps.Geocoder();
    var city
    var state

    geocoder.geocode({'address': $('#location').val()}, function(results, status){
        if (status == google.maps.GeocoderStatus.OK)
        {
            console.log('results[0].geometry.location:'+results[0].geometry.location);
            $('#lat').val(results[0].geometry.location.lat());
            $('#lng').val(results[0].geometry.location.lng());

            var arrAddress = results[0].address_components;
            // iterate through address_component array
            $.each(arrAddress, function (i, address_component) {
                if (address_component.types[0] == "locality") { // locality type
                    city = address_component.long_name; // city
                }
                if (address_component.types[0] == "administrative_area_level_1") { // locality type
                    state = address_component.short_name; // state
                }
            });
            $('#location').val(city + ', ' + state);
            console.log(city + ', ' + state);

            $.cookie("lat", results[0].geometry.location.lat(), {expires: 365, path: '/'})
            $.cookie("lng", results[0].geometry.location.lng(), {expires: 365, path: '/'})
            $.cookie("city", city, {expires: 365, path: '/'})
            $.cookie("state", state, {expires: 365, path: '/'})

        }
        else
        {
            $('#lat').val('');
            $('#lng').val('');
        }

        bsubmit = true;

        $('#search_form').submit();
    });

    return false;

}


function confirmSearchMobile()
{
    if (bsubmit)
    {
        return true;
    }

    // Get the lat long of the city, state
    console.log("location: " + $('#location-mobile').val());
    var geocoder = new google.maps.Geocoder();
    var city
    var state

    geocoder.geocode({'address': $('#location-mobile').val()}, function(results, status){
        if (status == google.maps.GeocoderStatus.OK)
        {
            console.log('results[0].geometry.location:'+results[0].geometry.location);
            $('#lat-mobile').val(results[0].geometry.location.lat());
            $('#lng-mobile').val(results[0].geometry.location.lng());

            var arrAddress = results[0].address_components;
            // iterate through address_component array
            $.each(arrAddress, function (i, address_component) {
                if (address_component.types[0] == "locality") { // locality type
                    city = address_component.long_name; // city
                }
                if (address_component.types[0] == "administrative_area_level_1") { // locality type
                    state = address_component.short_name; // state
                }
            });
            $('#location-mobile').val(city + ', ' + state);
            console.log(city + ', ' + state);

            $.cookie("lat-mobile", results[0].geometry.location.lat(), {expires: 365, path: '/'})
            $.cookie("lng-mobile", results[0].geometry.location.lng(), {expires: 365, path: '/'})
            $.cookie("city-mobile", city, {expires: 365, path: '/'})
            $.cookie("state-mobile", state, {expires: 365, path: '/'})

        }
        else
        {
            $('#lat-mobile').val('');
            $('#lng-mobile').val('');
        }

        bsubmit = true;

        $('#search_form-mobile').submit();
    });

    return false;

}
